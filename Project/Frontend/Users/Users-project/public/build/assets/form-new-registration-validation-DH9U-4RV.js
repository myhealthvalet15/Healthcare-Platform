document.addEventListener("DOMContentLoaded",function(){(function(){const d=$(".select2"),m=$(".selectpicker"),n=document.querySelector("#wizard-validation");if(typeof n!==void 0&&n!==null){const i=n.querySelector("#wizard-validation-form"),c=i.querySelector("#account-details-validation"),u=i.querySelector("#personal-info-validation");i.querySelector("#social-links-validation");const g=[].slice.call(i.querySelectorAll(".btn-next")),p=[].slice.call(i.querySelectorAll(".btn-prev")),a=new Stepper(n,{linear:!0}),f=FormValidation.formValidation(c,{fields:{formValidationFirstName:{validators:{notEmpty:{message:"The first name is required"},stringLength:{min:3,max:30,message:"The name must be more than 3 and less than 30 characters long"},regexp:{regexp:/^[a-zA-Z0-9 ]+$/,message:"The name can only consist of alphabetical, number and space"}}},formValidationLastName:{validators:{notEmpty:{message:"The last name is required"},stringLength:{min:3,max:30,message:"The name must be more than 3 and less than 30 characters long"},regexp:{regexp:/^[a-zA-Z0-9 ]+$/,message:"The name can only consist of alphabetical, number and space"}}},formValidationEmail:{validators:{notEmpty:{message:"The Email is required"},emailAddress:{message:"The value is not a valid email address"}}},formValidationPassword:{validators:{notEmpty:{message:"The password is required"}}},formValidationSelect2EType:{validators:{notEmpty:{message:"The employee type is required"}}},formValidationSelect2Gender:{validators:{notEmpty:{message:"Please select a gender"}}},formValidationDOB:{validators:{notEmpty:{message:"The dob field is required"}}},formValidationConfirmPass:{validators:{notEmpty:{message:"The Confirm Password is required"},identical:{compare:function(){return c.querySelector('[name="formValidationPassword"]').value},message:"The password and its confirm are not the same"}}},formValidationMobileCountryCode:{validators:{notEmpty:{message:"The country code is required"},regexp:{regexp:/^\+[0-9]{1,4}$/,message:"Country code must start with + followed by 1-4 digits"}}},formValidationMobile:{validators:{notEmpty:{message:"The mobile number is required"},stringLength:{min:10,max:10,message:"Mobile number must be exactly 10 digits"},regexp:{regexp:/^[0-9]{10}$/,message:"Mobile number must contain only digits"}}},formValidationAadhar:{validators:{stringLength:{min:12,max:12,message:"Aadhar ID must be exactly 12 digits"},regexp:{regexp:/^[0-9]{12}$/,message:"Aadhar ID must contain only digits"}}},formValidationabha:{validators:{stringLength:{min:14,max:14,message:"ABHA ID must be exactly 14 digits"},regexp:{regexp:/^[0-9]{14}$/,message:"ABHA ID must contain only digits"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",rowSelector:".col-sm-4"}),autoFocus:new FormValidation.plugins.AutoFocus,submitButton:new FormValidation.plugins.SubmitButton},init:e=>{e.on("plugins.message.placed",function(t){t.element.parentElement.classList.contains("input-group")&&t.element.parentElement.insertAdjacentElement("afterend",t.messageElement)})}}).on("core.form.valid",function(){a.next()}),o=FormValidation.formValidation(u,{fields:{formValidationEmpId:{validators:{notEmpty:{message:"The Employee Id is required"}}},formValidationSelect2EType:{validators:{notEmpty:{message:"Please select an Employee Type"}}},formValidationFromDate:{validators:{notEmpty:{message:"The From Date is required"}}},formValidationDepartment:{validators:{notEmpty:{message:"The Department is required"}}},formValidationDesignation:{validators:{notEmpty:{message:"The Designation is required"}}},formValidationContractor:{validators:{callback:{message:"The Contractor is required",callback:function(e,t,v){return document.getElementById("formValidationSelect2EType").value!==""?e!=="":!0}}}},formValidationContractorWorkerId:{validators:{callback:{message:"The Contractor Worker Id is required",callback:function(e,t,v){return document.getElementById("formValidationSelect2EType").value!==""?e!=="":!0}}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",rowSelector:".col-sm-4"}),autoFocus:new FormValidation.plugins.AutoFocus,submitButton:new FormValidation.plugins.SubmitButton}}).on("core.form.valid",function(){a.next()});m.length&&m.each(function(){var e=$(this);e.selectpicker().on("change",function(){o.revalidateField("formValidationLanguage")})}),d.length&&d.each(function(){var e=$(this);e.wrap('<div class="position-relative"></div>'),e.select2({placeholder:"Select an gender",dropdownParent:e.parent()}).on("change",function(){o.revalidateField("formValidationCountry")})});const h=document.getElementById("formValidationSelect2EType"),r=document.getElementById("contractorDetails"),s=document.getElementById("formValidationContractor"),l=document.getElementById("formValidationContractorWorkerId");h.addEventListener("change",function(){this.value,this.options[this.selectedIndex].getAttribute("data-checked")==="1"?(r.classList.add("show"),r.classList.remove("hidden"),s.disabled=!1,l.disabled=!1,o.revalidateField("formValidationContractor"),o.revalidateField("formValidationContractorWorkerId")):(r.classList.remove("show"),setTimeout(()=>{r.classList.add("hidden")},500),s.disabled=!0,l.disabled=!0,s.value="",l.value="")}),g.forEach(e=>{e.addEventListener("click",t=>{switch(a._currentIndex){case 0:f.validate();break;case 1:o.validate();break}})}),p.forEach(e=>{e.addEventListener("click",t=>{switch(a._currentIndex){case 2:a.previous();break;case 1:a.previous();break}})})}})()});
